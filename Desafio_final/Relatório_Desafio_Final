Para que essa atividade fosse executada, precisei fazer uma intensa pesquisa sobre pipelines, uma vez que por não ter experiência, não tinha ciência do que se tratava.
Como eu só havia um breve conhecimento para que pudesse desenvolver um código tão especifico e complexo, optei por não recorrer a IA (devido ao conhecimento insuficiente para criticar o resultado gerado pela IA). Mas a curiosidade pelo entedimento das etapas e ferramentas utilizadas me permitiu ao menos ter ciência da base para o desenvolvimento de uma pipeline.
As informações contidas nesse arquivo foram retiradas de alguns artigos que achei em minha pesquisa.

--------------- Iniciando o desenvolvimento da pipeline: ---------------

Primeiro tracei qual era a saída que eu buscava com a pipeline e para que os objetivos fossem atendidos, qual deveria ser a entrada.
Saída:
- Relatórios de qualidade (FastQC).
- Leituras limpas (FASTQ).
- Arquivo de contigs montados (FASTA).

Para essa saída, seria necessário:
Entrada:
- Arquivos FASTQ contendo leituras virais.
- Arquivo de adaptadores para remoção.
- Banco de contaminantes.

A partir dessa determinação, iniciei as etapas propostas clareando o que cada uma deveria contêr:

1. Controle de Qualidade das Leituras
Como os dados de sequenciamento podem conter erros, leituras de baixa qualidade ou adaptadores que interferem na análise, essa etapa deveria garantir que seriam usados apenas dados confiáveis.
Para isso, utiliza-se frequentemente as ferramentas:
- FastQC, que gera relatórios de qualidade para identificar problemas nas leituras, como baixa qualidade ou adaptadores;
- Trimmomatic, que busca remover adaptadores e leituras de baixa qualidade com base em critérios predefinidos.


2. Remoção de Contaminação
Devido as amostras virais poderem conter DNA de outros organismos (e.g., humano, bactérias). Essa etapa remove essas leituras para garantir que apenas o genoma viral seja analisado.
Para isso, utiliza-se frequentemente as ferramentas:
- BWA, é uma alinhador rápido que mapeia as leituras contra um banco de contaminantes.
- Samtools, funciona como um filtro de leituras não alinhadas (não contaminadas) e as converte de volta para o formato FASTQ.


3. Montagem do Genoma
A montagem é onde há a construção da sequência consenso do genoma viral a partir das leituras limpas. Se torna é essencial para a identificação de mutações ou estudo da evolução do vírus.
Para isso, utiliza-se frequentemente a ferramenta:
- SPAdes, que é um montador eficiente e amplamente usado para genomas pequenos, como os virais. 
Usa-se as leituras limpas (sem contaminantes) como entrada para o SPAdes para que ele gere contigs (sequências montadas).


4. Análise de Resultados
Essa é uma etapa cucial para avaliar a qualidade do genoma depois de sua montagem. Então utiliza-se de métricas como o número de contigs, N50 e o comprimento total para verificar se a montagem foi bem-sucedida.
Para isso, utiliza-se frequentemente a ferramenta:
Biopython, que manipula arquivos FASTA e calcula métricas básicas.
Com o uso dessa ferramenta busca-se calcular:
- Número de contigs.
- Comprimento total das sequências.
- N50, que indica a qualidade da montagem.

LIMITAÇÕES OBSERVADAS:
Para o desenvolvimento de uma pipeline seguindo esse esquelet, percebo algumas limitações como:
- Dependência de bancos de dados (para remover contaminantes ou realizar a montagem). Uma solução seria atualizar constantemente os bancos de dados de referência e, quando possível, usar bancos de dados específicos para vírus.
- Variações no genoma viral (vírus são altamente mutáveis, o que pode dificultar a montagem de uma sequência consenso precisa. Pode resultar em dificuldades para identificar variantes e reconstruir o genoma completo).
- A identificação de contaminantes é desafiadora (especialmente se o banco de contaminantes não for abrangente ou se o vírus estiver muito próximo de organismos de referência).


CONCLUSÕES FINAIS:
Após essa vasta pesquisa, acredito que com mais tempo para entender melhor as ferramentas na prática e poder aplica-las, embora o desafio apresente alto grau de complexidade, com mais tempo e pesquisa eu conseguiria desenvolver uma pipeline que simulasse as etapas principais de montagem de genomas virais.



